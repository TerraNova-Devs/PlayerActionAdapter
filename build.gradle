plugins {
    id 'java'
    id "io.github.goooler.shadow" version "8.1.8"
}

group = 'de.mcterranova'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "Nexo"
        url = "https://repo.nexomc.com/releases"
    }
    maven {
        name = "github"
        url = "https://maven.pkg.github.com/TerraNova-Devs/TerranovaLib"
        credentials {
            username = project.findProperty("githubUser")
            password = project.findProperty("githubToken")
        }
    }
}

dependencies {
    implementation('com.zaxxer:HikariCP:5.0.1')
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
    compileOnly 'de.mcterranova:terranova-lib:1.0.0'
    compileOnly 'com.nexomc:nexo:1.1.0'
    compileOnly fileTree(dir: 'jars', include: ['*.jar'])
    implementation("org.yaml:snakeyaml:2.2")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    destinationDirectory.set(file("./build/libs"))
    relocate("org.yaml.snakeyaml", "de.terranova.nations.libs.yaml")
    archiveClassifier.set('all')
}

tasks.build {
    dependsOn tasks.shadowJar
}
